package camera;

import java.io.FileNotFoundException;
import java.util.LinkedList;

import khepera.escenario.Escenario;

import corba.camara.IPYPortD;
import corba.camara.ListaSuscripcionD;
import corba.camara.suscripcionD;
import corba.consola.ConsolaInt;
import corba.consola.ConsolaIntHelper;
import corba.instantanea.EstadoRobotD;
import corba.instantanea.EstadoRobotDHelper;
import corba.instantanea.EstadoRobotDHolder;
import corba.instantanea.InstantaneaD;
import corba.khepera.escenario.EscenarioD;
import corba.robot.RobotSeguidorInt;
import corba.robot.RobotSeguidorIntHelper;

/**
 * This class is the implemetation object for your IDL interface.
 *
 * Let the Eclipse complete operations code by choosing 'Add unimplemented methods'.
 */
public class CamaraIntServerImpl extends corba.camara.CamaraIntPOA {
	
	org.omg.CORBA.ORB orb;
	
	private LinkedList<String> listaConsolas = new LinkedList<String>();
	private LinkedList<String> listaRobots = new LinkedList<String>();
	private LinkedList<EstadoRobotD> listaEstados = new LinkedList<EstadoRobotD>();
	private int numConsolas;
	private int numRobots;
	private Escenario escenario;
	private EscenarioD escenarioD;
	
	IPYPortD ipPort;
	
	/**
	 * Constructor for CamaraIntServerImpl 
	 */
	public CamaraIntServerImpl() {
		try {
			escenario = new Escenario("dibujo");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			System.out.println("Couldn't find dibujo file");
			e.printStackTrace();
		}
	}

	@Override
	public void BajaConsola(String arg0) {
		// Remove the IOR
		listaConsolas.remove(arg0);
	}

	@Override
	public void BajaRobot(String arg0) {
		// Remove the robot ref
		listaRobots.remove(arg0);
	}

	@Override
	public void ModificarEscenario(EscenarioD arg0) {
		escenario = new Escenario(arg0);
		
		// Notify robots and consoles
		for (String c : listaConsolas) {
			ConsolaInt cI = ConsolaIntHelper.narrow(orb.string_to_object(c));
			cI.ModificarEscenario(escenario.toEscenarioD());
		}
		
		for (String r : listaRobots) {
			RobotSeguidorInt rI = RobotSeguidorIntHelper.narrow(orb.string_to_object(r));
			rI.ModificarEscenario(escenario.toEscenarioD());
		}
		
	}

	@Override
	public EscenarioD ObtenerEscenario() {
		return escenario.toEscenarioD();
	}

	@Override
	public IPYPortD ObtenerIPYPortDifusion() {
		return ipPort;
	}

	@Override
	public InstantaneaD ObtenerInstantanea() {
		// TODO Auto-generated method stub
		return new InstantaneaD(listaEstados.toArray(new EstadoRobotD[0]));
		
		
		
	}

	@Override
	public ListaSuscripcionD ObtenerLista() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public suscripcionD SuscribirConsola(String arg0) {
		
		suscripcionD consola;
		
		consola = new suscripcionD(numConsolas,ipPort, escenario.toEscenarioD());
		numConsolas++;
		
		return null;
	}

	@Override
	public suscripcionD SuscribirRobot(String arg0) {
		// TODO Auto-generated method stub
		return null;
	}
	
	public class camaraDifusion implements Runnable{
		
		private EstadoRobotDHolder ERDH = new EstadoRobotDHolder();
		
		public camaraDifusion() {
			
		}

		@Override
		public void run() {
			// TODO Auto-generated method stub
			for (String r : listaRobots) {		
				RobotSeguidorInt rI = RobotSeguidorIntHelper.narrow(orb.string_to_object(r));
				rI.ObtenerEstado(ERDH);
				listaEstados.add(ERDH.value);
			}
		}
		
	}
}
